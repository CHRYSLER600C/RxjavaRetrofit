apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'org.greenrobot.greendao' // apply plugin


android {
    signingConfigs { // 打正式包的签名配置
        release {
            keyAlias 'invest'
            keyPassword 'invest'
            storeFile file('../release.keystore')
            storePassword 'invest'
        }
    }

    compileSdkVersion rootProject.ext.buildInfo.compileSdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.frame"
        minSdkVersion rootProject.ext.buildInfo.minSdkVersion
        targetSdkVersion rootProject.ext.buildInfo.targetSdkVersion
        versionCode rootProject.ext.otherInfo.versionCode
        versionName rootProject.ext.otherInfo.versionName
        flavorDimensions "default" //必须要保证所有的flavor 都属于同一个维度
        multiDexEnabled true
    }
    buildTypes {
        release { //ForRelease
            buildConfigField "boolean", "IS_DEBUG", "false"
            signingConfig signingConfigs.release   // 指定签名为release，否则不会签名
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true  //Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debugTest { //ForTest
            buildConfigField "boolean", "IS_DEBUG", "true"
            signingConfig signingConfigs.release   // 指定签名为release，否则不会签名
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true  //Zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug { //ForDevelop
            buildConfigField "boolean", "IS_DEBUG", "true"
            signingConfig signingConfigs.release   // 指定签名为release，否则不会签名
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // 自定义APK文件名
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "RxjavaRetrofit_V${defaultConfig.versionName}(${defaultConfig.versionCode})_${variant.productFlavors[0].name}_${buildType.name}_${releaseTime()}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //多渠道多配置打包
    productFlavors {
        google_play {
            resValue "string", "app_name_flavors", "@string/app_name"
        }
//        official {
//            resValue "string", "app_name_flavors", "@string/app_name"
//        }
//        samsung {
//            resValue "string", "app_name_flavors", "@string/app_name_cn"
//        }
//        qh360 {
//            resValue "string", "app_name_flavors", "@string/app_name_cn"
//        }
//        huawei {
//            resValue "string", "app_name_flavors", "@string/app_name_cn"
//        }
//        xiaomi {
//            resValue "string", "app_name_flavors", "@string/app_name_cn"
//        }
//        yybao {
//            resValue "string", "app_name_flavors", "@string/app_name_cn"
//        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
}

//获取时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd_HHmmss", TimeZone.getDefault())
}

greendao {
    schemaVersion 1
    targetGenDir 'src/main/java'
    daoPackage 'com.frame.core.dao'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.2'

    /**
     * Base Androidx
     */
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    /**
     * Dagger2
     */
    implementation 'com.google.dagger:dagger:2.28.3'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.28.3'

    /**
     * RxJava && RxAndroid && RxBinding && rxPermissions
     */
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.0'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5'

    /**
     * Net Request
     */
    //Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.0'
    //Gson
    implementation 'com.google.code.gson:gson:2.8.7'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    //SuperAdapter
    implementation 'org.byteam.superadapter:superadapter:3.6.8'

    /**
     * Utils
     */
    //Butterknife
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    //LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'
    //EventBus
    implementation 'org.greenrobot:eventbus:3.2.0'
    //AndroidUtilCode
    implementation 'com.blankj:utilcodex:1.31.0'
    //GreenDao
    implementation 'org.greenrobot:greendao:3.2.2' // add library
    //SlideBack
    implementation 'com.github.zouxianbincc:AndroidSlideBack:v1.0.0'

    /**
     * UI
     */
    //沉浸式状态栏
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    //TabLayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    //Banner轮播图
    implementation 'com.youth.banner:banner:1.4.10'
    //SmartRefresh
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-20'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-20'
    //VerticalTabLayout
    implementation 'q.rorbin:VerticalTabLayout:1.2.5'
    //流式布局
    implementation 'com.hyman:flowlayout-lib:1.1.2'

    /**
     * Kotlin
     */
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral() //Kotlin
}
